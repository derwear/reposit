console.log('[Prog] started bot..');
const { VK } = require('vk-io');
const {Keyboard} = require('vk-io');
const keyboard = Keyboard
const vk = new VK(); 
const { updates } = vk; 
const lobby = require('./lobby.json');
const commands = [];
const request = require('prequest');
let user = new VK();
const requests = require('request');
const fs = require("fs");
const rq = require("prequest");

const bot_owner = 239323586;



const utils = {
	sp: (int) => {
		int = int.toString();
		return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
	},
	rn: (int, fixed) => {
		if (int === null) return null;
		if (int === 0) return '0';
		fixed = (!fixed || fixed < 0) ? 0 : fixed;
		let b = (int).toPrecision(2).split('e'),
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
			c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
			d = c < 0 ? c : Math.abs(c),
			e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

			e = e.replace(/e/g, '');
			e = e.replace(/\+/g, '');
			e = e.replace(/Infinity/g, 'pnt');

		return e;
	},
	gi: (int) => {
		int = int.toString();

		let text = ``;
		for (let i = 0; i < int.length; i++)
		{
			text += `${int[i]}&#8419;`;
		}

		return text;
	},
	decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
	pick: (array) => {
		return array[utils.random(array.length - 1)];
	},
	time: () => {
		return parseInt(new Date().getTime()/1000)
	}
}



let btc = 6000;

let users = require('./users.json');
let buttons = [];

setTimeout(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 5);

setInterval(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 60000);

setInterval(async () => {
	await saveUsers();
	console.log('saved');
}, 10000);



setInterval(async () => {
	users.map(user => {
		for(var i = 0; i < user.business.length; i++)
		{
			const biz = businesses[user.business[i].id - 1][user.business[i].upgrade - 1];
			user.business[i].moneys += Math.floor(biz.earn / biz.workers * user.business[i].workers)
		}
	});
}, 3600000);

function clearTemp()
{
	users.map(user => {
		user.timers.hasWorked = false;
		user.timers.bonus = false;
   user.timers.text = false;
	});
}

clearTemp();

async function saveUsers()
{
	require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
	return true;
}

vk.setOptions({ token: '2ef904700df74564064565cc3d90c5dd5d1efa3d28338afb94725cb30e88cca4e1b85cdfb470e469b50a2', pollingGroupId: 190468255 });


updates.startPolling();
updates.on('message', async (message) => {
	if(Number(message.senderId) <= 0) return;
	if(/\[public190468255'''\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[public190468255\|(.*)\]/ig, '').trim();
	if(/\[club190468255'''\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[club190468255\|(.*)\]/ig, '').trim();
	if(/\[redelore'''\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[redelore\|(.*)\]/ig, '').trim();
	if(/^(?:@redelore)$/i.test(message.text)) message.text = message.text.replace(/^(?:@redelore)$/i, '').trim();
	message.text = message.text.replace(/\[public190468255\|(.*)\]/ig, '').trim();
	message.text = message.text.replace(/\[club190468255\|(.*)\]/ig, '').trim();
	if(!users.find(x=> x.id === message.senderId))
	{
		const [user_info] = await vk.api.users.get({ user_id: message.senderId });
		const date = new Date();
		return message.send(`–ü–æ–∑–≤–æ–ª—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∫–æ–µ —á—Ç–æ.
		–í 2095 –≥–æ–¥—É, –≤–æ –≤—Ä–µ–º–µ–Ω–∞ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –≥—Ä—É–ø–ø–∞ —É—á—ë–Ω—ã—Ö –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –æ–±—ä–µ–¥–∏–Ω–∏–ª–∏—Å—å –¥–ª—è –æ–¥–Ω–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π —Ü–µ–ª–∏: –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ª—é–¥—è–º –≤–æ–π—Ç–∏ –≤ –º–∞—Ç—Ä–∏—Ü—É.
		–î–ª—è —ç—Ç–æ–π —Ü–µ–ª–∏ –æ–Ω–∏ —Ä–µ—à–∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –∫–∏–±–µ—Ä–¥–µ–∫—É - –∫–æ–º–ø—å—é—Ç–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞ –∫ —Å–µ—Ç–∏ –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –Ω–µ–π—Ä–æ–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
		–≠—Ç–æ –±—ã–ª–æ –Ω–æ–≤—ã–º, –±–æ–ª—å—à–∏–º —à–∞–≥–æ–º —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞ –≤ –∫–∏–±–µ—Ä–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ.
		
		–ö–æ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Ç–µ—Å—Ç—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫–∏–±–µ—Ä–¥–µ–∫–∞ —Å—Ç–∞–ª –ø—Ä–æ–¥–æ–≤–∞—Ç—å—Å—è –≤–æ –≤—Å–µ–º –º–∏—Ä–µ. –¢–µ–ø–µ—Ä—å –ª—é–¥–∏ –º–æ–≥—É—Ç –≤–æ–π—Ç–∏ –≤ –º–∞—Ç—Ä–∏—Ü—É, –∏ –≤–ø–æ–ª–Ω–µ –∂–∏—Ç—å —Ç–∞–º.
		–ù–æ –∫ —Å–æ–∂–µ–ª–µ–Ω–∏—é, –∑–∞ –∫—Ä–æ–≤–Ω–æ–µ –º–µ—Å—Ç–æ –∏–º –ø—Ä–∏—à–ª–æ—Å—å –±–æ—Ä–æ—Ç—å—Å—è. –ò –≤—ã —Ç—É–¥–∞ —Ç–æ–∂–µ –ø–æ–π–¥–µ—Ç–µ.
		
		üìñ | –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è, –ø—Ä–æ–π–¥–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.`,
		{
			keyboard:JSON.stringify( 
				{ 
				"one_time": true, 
				"buttons": [ 
				[{ 
					"action": { 
					"type": "text", 
					"payload": "{}", 
					"label": "–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ" 
					},
					"color": "positive"
						}] 
			]
			})}),
		users.push({
			id: message.senderId,
			uid: users.length,
			admin: 1,
			lobby: -1,
			lobbym: 2,
			str: 1000,
			vit: 100000,
			reg: 0,
			unite: ``,
			hp_mon: 0, 
			sil_mon: 0,
			quest_1: false,
			quest_2: false,
			quest_3: false,
			timers: {
				hasWorked: false
			},
			rating: 0,
			level: 1,
			exp: 0,
            train: 0,
            promo: [],
			exp: 0,
			rub: 0,
			sm: 0,
			um: 0,
			se: 0,
			active: 0,
			pk: 0,
			tag: user_info.first_name,
			balance: 100,
			cyberdeka: false,
			aspects: 0,
			nc: 0,
		    dc: 0,
			admins: 0,
			one_sc: false,
		    ban: false,
			regDate: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`,
			timers: {
				hasWorked: false,
				bonus: false,
       text: false
			},
			tag: user_info.first_name,
			blocked: false

		});
	}
	message.user = users.find(x=> x.id === message.senderId);
	if(message.user.ban) return;

	const bot = (text, params) => {
		return message.send(`${message.user.mention ? `@id${message.user.id} (${message.user.tag})` : `${message.user.tag}`}, ${text}`, params);
	}

	const command = commands.find(x=> x[0].test(message.text));
	if(!command) return;

	if(message.user.exp >= 100)
	{
		message.user.exp = 0;
		message.user.level += 1;
	}

	message.args = message.text.match(command[0]);
	await command[1](message, bot);

	console.log(`[User-${message.user.uid}] ‚Äî ${message.text}`)
});

const cmd = {
	hear: (p, f) => {
		commands.push([p, f]);
	}
}
cmd.hear(/^(?:–Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ)$/i, async (message, bot) => {
if(message.user.train == 0) {
	message.user.train += 1;
	  return message.send({message: `
–ê—Ä–Ω–∏ > –í—Å–µ —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ, –±—É–¥–µ—Ç –≤–æ –≤–∫–ª–∞–¥–∫–µ —Å–ø—Ä–∞–≤–∫–∞. –Ø –ª–∏—à—å —Ä–∞–∑—ä—è—Å–Ω—é –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã. –í–∏–¥–∏—à—å —ç—Ç—É –ø–∞–Ω–µ–ª—å? –≠—Ç–∞ –ø–∞–Ω–µ–ª—å —Ç–≤–æ–µ–π –∫–∏–±–µ—Ä–¥–µ–∫–∏. –û–Ω–∞ –ø–æ—è–≤–∏—Ç—Å—è —É —Ç–µ–±—è –ø–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è, –∞ –ø–æ–∫–∞ —Ä–∞–∑–±–µ—Ä–µ–º –≤—Å–µ –µ—ë —á–∞—Å—Ç–∏.`, attachment: 'photo-190468255_457239031',
		  keyboard:JSON.stringify({
					  "inline": true,
					  "buttons": [[{
						  "action": {
						  "type": "text",
						  "payload": "{\"command\": \"bla\"}",
						  "label": "üîé –ò–∑—É—á–∏—Ç—å"
						},
					  "color": "positive"
					  }]]})})}})
  cmd.hear(/^(?:üîé –ò–∑—É—á–∏—Ç—å)$/i, async (message, bot) => {
  if(message.user.train == 1){
  message.user.train += 1;
  return message.send(`
> –ê–∫–∫–∞—É–Ω—Ç ‚Äî –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—à–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ.
> –≠–º—É–ª—è—Ç–æ—Ä ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º—ã–π –º–æ–¥—É–ª—å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç —ç–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∫–∏–±–µ—Ä–¥–µ–∫—É –∫–∞–∫ –æ—Ä—É–∂–∏–µ —Ö–∞–∫–µ—Ä–∞.
> –ß—ë—Ä–Ω—ã–π –ª—ë–¥ ‚Äî –ø–æ—Ä–æ—à–æ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑–≤–∏–≤–∞–µ—Ç –í–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ.
> –¢—ë–º–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ (Dark Side) ‚Äî —Ç—ë–º–Ω–∞—è —á–∞—Å—Ç—å –º–∞—Ç—Ä–∏—Ü—ã, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Å–∞–º—ã–µ —É–∂–∞—Å–Ω—ã–µ –≤–µ—â–∏, –Ω–æ —Ç–∞–º –º–æ–∂–Ω–æ —Ö–æ—Ä–æ—à–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å.
> –ñ—É—Ä–Ω–∞–ª ‚Äî –í–∞—à –ª–∏—á–Ω—ã–π –∂—É—Ä–Ω–∞–ª-–ø–æ–º–æ—â–Ω–∏–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö –∏ —Ç–µ–∫—É—â–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö.
> –°–ø—Ä–∞–≤–∫–∞ ‚Äî –º–µ—Å—Ç–æ, –≥–¥–µ —Å–æ–±—Ä–∞–Ω—ã –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã.

–ê—Ä–Ω–∏ > –í—Å–µ –ø–æ–Ω—è–ª? –î–∞–ª—å—à–µ –±–æ–ª—å—à–µ.`,
	  {
					  keyboard:JSON.stringify({
					  "inline": true,
					  "buttons": [[{
						  "action": {
						  "type": "text",
						  "payload": "{\"command\": \"bla\"}",
						  "label": "üßê –ü–æ–Ω—è–ª"},
					  "color": "positive"}]]})});
  }
  });
  
  cmd.hear(/^(?:üßê –ü–æ–Ω—è–ª)$/i, async (message, bot) => {
	if(message.user.train == 0) return;
  if(message.user.train == 2){
  message.user.train += 1;
  return message.send(`
–ê—Ä–Ω–∏ > –ò –µ—â—ë –∫–æ–µ —á—Ç–æ, –∑–∞–ø–æ–º–Ω–∏ 2 –ø—Ä–∞–≤–∏–ª–∞: PVP - –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞, PVE - –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è.`,
	  {
					  keyboard:JSON.stringify({
					  "inline": true,
					  "buttons": [[{
						  "action": {
						  "type": "text",
						  "payload": "{\"command\": \"attack\"}",
						  "label": "üßê –î–∞ –ø–æ–Ω—è–ª —è"},
					  "color": "negative"}]]})});
  }
  });
  cmd.hear(/^(?:üßê –î–∞ –ø–æ–Ω—è–ª —è)$/i, async (message, bot) => {
	if(message.user.train == 0) return;
  if(message.user.train == 3){
	message.user.train += 1;
	return message.send(`
–ê—Ä–Ω–∏ > –†–∞–∑ –ø–æ–Ω—è–ª, —Ç–æ –¥–µ—Ä–∂–∏ –º–æ–Ω–µ—Ç—ã –∏ –ø–æ–∫—É–ø–∞–π –ö–∏–±–µ—Ä–¥–µ–∫—É.`,
		{
						keyboard:JSON.stringify({
						"inline": true,
						"buttons": [[{
							"action": {
							"type": "text",
							"payload": "{\"command\": \"rassat\"}",
							"label": "üëæ –ö–∏–±–µ—Ä–¥–µ–∫–∞"},
						"color": "secondary"}]]})});
	
	}
	});
  
//–Æ–ó–ï–†
/*cmd.hear(/^(?:–ù–∞—á–∞—Ç—å|–°—Ç–∞—Ä—Ç|–ù–∞—á–∞—Ç—å –∏–≥—Ä—É)$/i, async (message, bot) => {
	message.user.foolder += 1;
	return bot(`–ø–æ–∑–≤–æ–ª—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∫–æ–µ —á—Ç–æ.
	–í 2095 –≥–æ–¥—É, –≤–æ –≤—Ä–µ–º—è –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –≥—Ä—É–ø–ø–∞ —É—á—ë–Ω—ã—Ö –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –æ–±—ä–µ–¥–∏–Ω–∏–ª–∏—Å—å –¥–ª—è –æ–¥–Ω–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π —Ü–µ–ª–∏: –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ª—é–¥—è–º –≤–æ–π—Ç–∏ –≤ –º–∞—Ç—Ä–∏—Ü—É.
	–î–ª—è —ç—Ç–æ–π —Ü–µ–ª–∏ –æ–Ω–∏ —Ä–µ—à–∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –∫–∏–±–µ—Ä–¥–µ–∫—É - –∫–æ–º–ø—å—é—Ç–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞ –∫ —Å–µ—Ç–∏ –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –Ω–µ–π—Ä–æ–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
	–≠—Ç–æ –±—ã–ª–æ –±—ã –Ω–æ–≤—ã–º, –±–æ–ª—å—à–∏–º —à–∞–≥–æ–º —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞ –≤ –∫–∏–±–µ—Ä–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ.
	
	–ö–æ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Ç–µ—Å—Ç—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫–∏–±–µ—Ä–¥–µ–∫–∞ —Å—Ç–∞–ª –ø—Ä–æ–¥–æ–≤–∞—Ç—å—Å—è –≤–æ –≤—Å–µ–º –º–∏—Ä–µ. –¢–µ–ø–µ—Ä—å –ª—é–¥–∏ –º–æ–≥—É—Ç –≤–æ–π—Ç–∏ –≤ –º–∞—Ç—Ä–∏—Ü—É.
	–ù–æ –∫ —Å–æ–∂–µ–ª–µ–Ω–∏—é, –∑–∞ –∫—Ä–æ–≤–Ω–æ–µ –º–µ—Å—Ç–æ –∏–º –ø—Ä–∏—à–ª–æ—Å—å –±–æ—Ä–æ—Ç—å—Å—è. –ò –≤—ã —Ç—É–¥–∞ —Ç–æ–∂–µ –ø–æ–π–¥–µ—Ç–µ.
	
	[–ê—Ä–Ω–∏]: –≠–π, —Ç—ã —Ç—É—Ç –Ω–µ –∑–µ–≤–∞–π, —Ö–æ—Ä–æ—à–æ? –î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–π–¥–∏ –∏ –∫—É–ø–∏ –∫–∏–±–µ—Ä–¥–µ–∫—É. –î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –≤–æ–Ω —Ç—É –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É.

	üìñ | –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∫—É–ø–∏—Ç–µ –∫–∏–±–µ—Ä–¥–µ–∫—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö–∏–±–µ—Ä–¥–µ–∫–∞", –ª–∏–±–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç "–ö–∏–±–µ—Ä–¥–µ–∫–∞".
`, { 
	keyboard:JSON.stringify( 
	{ 
	"one_time": false, 
	"buttons": [ 
	[{ 
		"action": { 
		"type": "text", 
		"payload": "{}", 
		"label": "üëæ –ö–∏–±–µ—Ä–¥–µ–∫–∞" 
		},
		"color": "positive"
			}] 
]
})
}
)
});*/
cmd.hear(/^(?:üëæ –ö–∏–±–µ—Ä–¥–µ–∫–∞|–ö–∏–±–µ—Ä–¥–µ–∫–∞|–ö–∏–±–µ—Ä –¥–µ–∫–∞|üëæ)$/i, async (message, bot) => {
	message.user.foolder += 1;
	if(message.user.cyberdeka == false) {
		message.user.cyberdeka = true
		message.user.balance -= Number(100)
		return message.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Å–µ–±–µ "–ö–∏–±–µ—Ä–¥–µ–∫—É" –∑–∞ 100 –º–æ–Ω–µ—Ç.
–ê—Ä–Ω–∏ > –¢–∞–∫ —Ç–æ –ª—É—á—à–µ! –¢–µ–ø–µ—Ä—å —Ç—ã –≤–ø–æ–ª–Ω–µ –º–æ–∂–µ—à—å –≤–æ–π—Ç–∏ –≤ –∫–∏–±–µ—Ä–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ. –£–¥–∞—á–∏, –∏ –Ω–µ —É–º—Ä–∏ –≤ –ø–µ—Ä–≤—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã.
`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëæ –ö–∏–±–µ—Ä–¥–µ–∫–∞" 
	}, 
	"color": "secondary" 
}]]})})
	}else{
		return message.send(`üíæ | –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∏–±–µ—Ä–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ.`, { 
			keyboard:JSON.stringify( 
			{ 
			"one_time": false, 
			"buttons": [ 
			[{ 
			"action": { 
			"type": "text", 
			"payload": "{}", 
			"label": "üìí –ê–∫–∫–∞—É–Ω—Ç" 
			}, 
			"color": "positive" 
			}, 
			{ 
			"action": { 
			"type": "text", 
			"payload": "{}", 
			"label": "üñ• –≠–º—É–ª—è—Ç–æ—Ä" 
			}, 
			"color": "secondary" 
			}, 
			{ 
			"action": { 
			"type": "text", 
			"payload": "{}", 
			"label": "üíâ –ß—ë—Ä–Ω—ã–π –ª—ë–¥" 
			}, 
			"color": "secondary" 
			}], 
			[{ 
			"action": { 
			"type": "text", 
			"payload": "{}", 
			"label": "üî™ Dark Side" 
			}, 
			"color": "negative" 
			}, 
			{ 
			"action": { 
			"type": "text", 
			"payload": "{}", 
			"label": "üìï –ñ—É—Ä–Ω–∞–ª" 
			}, 
			"color": "secondary" 
		}, 
		{ 
		"action": { 
		"type": "text", 
		"payload": "{}", 
		"label": "üîé –°–ø—Ä–∞–≤–∫–∞" 
		}, 
		"color": "positive" 
			}] 
		] 
		}) 
		});
	}
})

cmd.hear(/^(?:üî™ Dark Side|Darkside|Dark Side|dark side|dark Side|DARKSIDE|DARK SIDE|–¢–µ–º–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞|–¢—ë–º–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)$/i, async (message, bot) => {
	return message.send(`
üõí | –¢—ë–º–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω

–ù–µ–ª–µ–≥–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω, –≥–¥–µ –ø—Ä–æ–¥–∞—ë—Ç—Å—è –∫–∏–±–µ—Ä-–æ—Ä—É–∂–∏–µ, –∫–∏–±–µ—Ä-–±—Ä–æ–Ω—è –∏ –≤—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –≤—ã–∂–∏–≤–∞–Ω–∏—è –≤ —Ç—ë–º–Ω–æ–π —á–∞—Å—Ç–∏ –∫–∏–±–µ—Ä–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞.

‚öî | PVP

–†–µ–∂–∏–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Å—Ä–∞–∂–∞–µ—Ç–µ—Å—å –≤ –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ –º–æ–Ω–µ—Ç—ã.

üö™ | PVE

–†–µ–∂–∏–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –ª–æ–∫–∞—Ü–∏–∏ –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –º–æ–Ω–µ—Ç—ã.

‚õè | Dark Work

–°–∞–º–∞—è —Ç—ë–º–Ω–∞—è –∏ –æ—Ç–≤—Ä–∞—Ç–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤ –∫–∏–±–µ—Ä–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –Ω–æ –ø–ª–∞—Ç—è—Ç –∑–∞ –Ω–µ—ë —Ö–æ—Ä–æ—à–æ.
`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üõí" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "‚öî" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üö™" 
	}, 
	"color": "secondary" 
	},
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "‚õè" 
	},
	"color": "secondary" 
	}]
] 
})}
)});
cmd.hear(/^(?:‚õè|darkwork|dark work|—Ç—ë–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞|—Ç–µ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞)$/i, async (message, bot) => {
if(message.user.timers.hasWorked) return message.send(`‚ö° | –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Ç–æ, —á—Ç–æ —Ç—ã –µ—â–µ —Ö–æ—á–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–æ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ–¥–æ–∂–¥–∞—Ç—å.`);
		setTimeout(() => {
			message.user.timers.hasWorked = false;
		}, 80000);
		let worker = utils.pick([`–¶–µ–ª—ã–π –¥–µ–Ω—å –í—ã –ø–æ–¥–¥–µ–ª—ã–≤–∞–ª–∏ –ø–∞—Å–ø–æ—Ä—Ç–∞, –∏ –≤–∏–¥–∏–º–æ –Ω–µ –∑—Ä—è`, `–û–∫–∞–∑–∞–ª–æ—Å—å, –ø–æ–¥–±–∏—Ä–∞—Ç—å –ø–æ—Ä–æ–ª—å –∫ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Ç–∞–∫–∞—è —É–∂ –∏ –ø—Ä–æ—Å—Ç–∞—è —Ä–∞–±–æ—Ç–∞`, `–£–±–∏–≤–∞—Ç—å —Ä–æ–±–æ—Ç–æ–≤ - –Ω–µ—Ö–æ—Ä–æ—à–æ, –Ω–æ –∫–æ–≥–¥–∞ –∑–∞ —ç—Ç–æ –ø–ª–∞—Ç—è—Ç —Ç–æ–≥–¥–∞ –º–æ–∂–Ω–æ`, `28 —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –æ –Ω–∞—Ä–∫–æ—Ç–æ—Ä–≥–æ–≤–ª–∏! –¢—ã –¥–µ–π—Å—Ç–≤–æ–≤–∞–ª –Ω–∞–≤–µ—Ä–Ω—è–∫–∞, –¥–∞.`, `–ü–æ–¥–¥–µ–ª—ã–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å—å —Ü–µ–ª—ã—Ö 7 —á–∞—Å–æ–≤ - –¥–∞, –≤ —ç—Ç–æ–º –≤–µ—Å—å —Ç—ã.`, `–ß—Ç–æ-–∂, —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —É–º–∞—Ç—ã–≤–∞—Ç—å –ø–æ–¥–∞–ª—å—à–µ - –≥–ª–∞–≤–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ —á—ë—Ä–Ω–æ–≥–æ –ª—å–¥–∞ - —Ç—ã.`]);
	
		message.user.timers.hasWorked = true;
		message.user.exp += 2;
	
		const earn = utils.random(100, 5000);
	
		message.user.balance += earn;
	
	
		return message.send(`${worker}\n+${utils.sp(earn)} –º–æ–Ω–µ—Ç.`);
	

})
cmd.hear(/^(?:üõí|–¢–µ–º–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω|–º–∞–≥–∞–∑|shop|–¢—ë–º–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω|–º–∞–≥–∞–∑–∏–Ω)$/i, async (message, bot) => {
	return message.send(`
> –†–∞–∑–¥–µ–ª—ã

üó° | –ú–µ—á–∏
üëï | –ù–∞–≥—Ä—É–¥–Ω–∏–∫–∏
üëñ | –ü–æ–Ω–æ–∂–∏`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üó°" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëï" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëñ" 
	}, 
	"color": "secondary" 
}]]})})})
cmd.hear(/^(?:üëñ|–ü–æ–Ω–æ–∂–∏)$/i, async (message, bot) => {
	return message.send(`
1 | <<Seventh Race>> ‚Äî 1.200 –º–æ–Ω–µ—Ç.
–û—á–µ–Ω—å –ª–µ–≥–∫–∏–µ –∏ –ø–æ—á—Ç–∏ –Ω–µ —á—É–≤—Å—Ç–≤—É—é—Ç—Å—è.
–ó–¥–æ—Ä–æ–≤—å–µ: +30 üíô

2 | <<Effortless>> ‚Äî 3.300 –º–æ–Ω–µ—Ç.
–®—É—Ç–∫–∏ —à—É—Ç–∫–∞–º–∏, –Ω–æ —ç—Ç–∏ —à—Ç–∞–Ω—ã –Ω–∞ —á–µ—Ç–≤–µ—Ä—Ç—å –∏–∑ –±—É–º–∞–≥–∏.
–ó–¥–æ—Ä–æ–≤—å–µ: +70 üíô

3 | <<Particular>> ‚Äî 9.900 –º–æ–Ω–µ—Ç.
–í —ç—Ç–∏—Ö —à—Ç–∞–Ω–∞—Ö—Ö –∏ –ª—É—Ç –∑–∞–±—Ä–∞—Ç—å –Ω–µ —Å—Ç—ã–¥–Ω–æ.
–ó–¥–æ—Ä–æ–≤—å–µ: +110 üíô

4 | <<Number 13>> ‚Äî 26.100 –º–æ–Ω–µ—Ç.
–ê –≤ —ç—Ç–∏—Ö –º–æ–∂–Ω–æ —Å–º–µ–ª–æ –∏–¥—Ç–∏ –≤ —Å—Ç–µ–ª—Å, –Ω–æ –∏–Ω–æ–≥–¥–∞ —Ç—ã –±—É–¥–µ—à—å –∑–∞–±—ã–≤–∞—Ç—å —á—Ç–æ —Ç—ã –≤ —à—Ç–∞–Ω–∞—Ö.
–ó–¥–æ—Ä–æ–≤—å–µ: +150 üíô

5 | <<Valuable>> ‚Äî 46.000 –º–æ–Ω–µ—Ç.
–¢–µ —Å–∞–º—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–æ–∂–Ω—ã –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –Ω–æ —Ü–µ–Ω–∞ —Ç–æ–≥–æ —Å—Ç–æ–∏—Ç.
–ó–¥–æ—Ä–æ–≤—å–µ: +170 üíô

> –í–Ω–∏–º–∞–Ω–∏–µ. –ö—É–ø–∏–≤ –æ–¥–Ω–∞–∂–¥—ã –ø–æ–Ω–æ–∂–∏, –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –µ–≥–æ –ø—Ä–æ–¥–∞—Ç—å, –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –Ω–æ–≤—ã–µ, –∏ –æ–Ω –ø—Ä–∏–±–∞–≤–∏—Ç –º–∞–∫—Å–∏–º—É–º –∑–¥–æ—Ä–æ–≤—å—è.
`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëñ 1" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëñ 2" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëñ 3" 
	}, 
	"color": "secondary" 
	},
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëñ 4" 
	},
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëñ 5" 
	}, 
	"color": "secondary" 
}]]})})});
cmd.hear(/^(?:üëï|–ù–∞–≥—Ä—É–¥–Ω–∏–∫–∏)$/i, async (message, bot) => {
	return message.send(`
1 | <<Royal Family>> ‚Äî 1.000 –º–æ–Ω–µ—Ç.
–ù–∞–≥—Ä—É–¥–Ω–∏–∫ –∏–∑ –ø—Ä–æ—Å—Ç–µ–π—à–µ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∏–∑–≤–µ—Å—Ç–Ω–∞ –≤—Å–µ–º.
–ó–¥–æ—Ä–æ–≤—å–µ: +50 üíô

2 | <<Dangerous R>> ‚Äî 2.100 –º–æ–Ω–µ—Ç.
–°–º–µ—à–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å–º–µ—à–Ω–∞—è —Ü–µ–Ω–∞, –æ–¥–Ω–∞–∫–æ –∑–∞—â–∏—â–∞–µ—Ç –Ω–µ–ø–ª–æ—Ö–æ.
–ó–¥–æ—Ä–æ–≤—å–µ: +80 üíô

3 | <<SteelBlood>> ‚Äî 15.300 –º–æ–Ω–µ—Ç.
–¢–∞–∫ –ø—Ä–æ—Å—Ç–æ —ç—Ç–æ—Ç –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –Ω–µ –¥–æ—Å—Ç–∞—Ç—å, –ø–æ—ç—Ç–æ–º—É –∑–∞ –Ω–µ–µ —Ö–æ—Ä–æ—à–æ –ø–ª–∞—Ç—è—Ç.
–ó–¥–æ—Ä–æ–≤—å–µ: +120 üíô

4 | <<Dead Arnie>> ‚Äî 33.200 –º–æ–Ω–µ—Ç.
–≠—Ç–∏–º –Ω–∞–≥—Ä—É–¥–Ω–∏–∫–æ–º –∑–∞–Ω–∏–º–∞–ª–∞—Å—å —Ç–∞ —Å–∞–º–∞—è –∫–æ—Ä–æ–ª–µ–≤—Å–∫–∞—è –¥–∏–Ω–∞—Å—Ç–∏—è, —Ü–µ–Ω–∞ –¥–ª—è —Ç–∞–∫–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è.
–ó–¥–æ—Ä–æ–≤—å–µ: +160 üíô

5 | <<Corn John>> ‚Äî 52.000 –º–æ–Ω–µ—Ç.
–ù–µ —Ö–æ–ª–æ–¥–Ω–æ, –Ω–µ –∂–∞—Ä–∫–æ, –ø–æ–¥ —ç—Ç–æ—Ç –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–¥–æ –ø–æ—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è, –æ–Ω —Å–∞–º —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç.
–ó–¥–æ—Ä–æ–≤—å–µ: +200 üíô

> –í–Ω–∏–º–∞–Ω–∏–µ. –ö—É–ø–∏–≤ –æ–¥–Ω–∞–∂–¥—ã –Ω–∞–≥—Ä—É–¥–Ω–∏–∫, –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –µ–≥–æ –ø—Ä–æ–¥–∞—Ç—å, –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –Ω–æ–≤—ã–π, –∏ –æ–Ω –ø—Ä–∏–±–∞–≤–∏—Ç –º–∞–∫—Å–∏–º—É–º –∑–¥–æ—Ä–æ–≤—å—è.
`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëï 1" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëï 2" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëï 3" 
	}, 
	"color": "secondary" 
	},
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëï 4" 
	},
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üëï 5" 
	}, 
	"color": "secondary" 
}]]})})});
cmd.hear(/^(?:üó°|–ú–µ—á–∏)$/i, async (message, bot) => {
	return message.send(`
1 | <<–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —ç—Å–∫–∞–ª–∏–±—É—Ä>> ‚Äî 2.500 –º–æ–Ω–µ—Ç.
–ü–µ—Ä–≤—ã–π –º–µ—á –Ω–æ–≤–∏—á–∫–∞. –û—á–µ–Ω—å –¥–µ—à—ë–≤—ã–π –∏ –ª–µ–≥–∫–∏–π.
–°–∏–ª–∞: +5 üí™üèª

2 | <<Cyber-Razor>> ‚Äî 7.500 –º–æ–Ω–µ—Ç.
–ß—É—Ç—å –ø–æ—Ç—è–∂–µ–ª–µ–µ, —á–µ–º —ç—Å–∫–∞–ª–∏–±—É—Ä, –Ω–æ –≤—Å–µ —Ç–∞–∫–∏ —Å–∏–ª—ã –º–Ω–æ–≥–æ –Ω–µ –ø—Ä–∏–±–∞–≤–∏—Ç.
–°–∏–ª–∞: +9 üí™üèª

3 | <<Ernard>> ‚Äî 21.300 –º–æ–Ω–µ—Ç.
–û—Ä—É–∂–∏–µ –∏–∑ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–∏—Ö –¥–∏–Ω–∞—Å—Ç–∏–π –∫–∏–±–µ—Ä–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞. –ö–æ–≥–¥–∞ –æ–Ω–∏ –ø—Ä–∏—à–ª–∏ –∫ –≤–ª–∞—Å—Ç–∏, —Ç–æ —Ç–æ–ª—å–∫–æ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–ª–∏ –≤–æ–π–Ω—É.
–°–∏–ª–∞: +16 üí™üèª

4 | <<Razorblade>> ‚Äî 53.900 –º–æ–Ω–µ—Ç.
–°—á–∏—Ç–∞–ª—Å—è —Ä–µ–¥–∫–∏–º –∏ —Å–∏–ª—å–Ω—ã–º –º–µ—á–æ–º, –Ω–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–¥–µ–ª–∞–ª–∞ –∏–∑ –º–µ—á–∞ —á—Ç–æ-—Ç–æ —Å—Ä–µ–¥–Ω–µ–µ.
–°–∏–ª–∞: +23 üí™üèª

5 | <<Corn Billie>> ‚Äî 82.000 –º–æ–Ω–µ—Ç.
–°–∞–º—ã–π –ª—É—á—à–∏–π –º–µ—á, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å. –û–¥–Ω–∞–∫–æ –µ—Å—Ç—å –º–µ—á–∏ –∏ –ø–æ–∫—Ä—É—á–µ.
–°–∏–ª–∞: +50 üí™üèª

> –í–Ω–∏–º–∞–Ω–∏–µ. –ö—É–ø–∏–≤ –æ–¥–Ω–∞–∂–¥—ã –º–µ—á, –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –µ–≥–æ –ø—Ä–æ–¥–∞—Ç—å, –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –Ω–æ–≤—ã–π, –∏ –æ–Ω –ø—Ä–∏–±–∞–≤–∏—Ç —Å–∏–ª—ã.
`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üó° 1" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üó° 2" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üó° 3" 
	}, 
	"color": "secondary" 
	},
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üó° 4" 
	},
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üó° 5" 
	}, 
	"color": "secondary" 
}]]})})});
cmd.hear(/^(?:üö™|pve|PVE|p v e|pv e|p ve|–ø–≤–µ|–ø –≤ –µ)$/i, async (message, bot) => {
	message.send(`
üåé | –í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é

> –°–µ–≤–µ—Ä–Ω—ã–π –º–æ—Å—Ç
> –Æ–∂–Ω—ã–π –º–æ—Å—Ç

[C 25-–≥–æ —É—Ä–æ–≤–Ω—è]
> –°–µ—Ç–µ–≤–æ–π —ç–∫—Ä–∞–Ω
> –¢—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä

[–° 50-–≥–æ —É—Ä–æ–≤–Ω—è]
> –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–°–µ–≤–µ—Ä–Ω—ã–π –º–æ—Å—Ç" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–Æ–∂–Ω—ã–π –º–æ—Å—Ç" 
	}, 
	"color": "secondary" 
	}], 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–°–µ—Ç–µ–≤–æ–π —ç–∫—Ä–∞–Ω" 
	}, 
	"color": "secondary" 
	},
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–¢—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä" 
	}, 
	"color": "secondary" 
	}],
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞" 
	}, 
	"color": "secondary" 
	},
	]
] 
})})})
	

cmd.hear(/^(?:üñ• –≠–º—É–ª—è—Ç–æ—Ä|–≠–º—É–ª—è—Ç–æ—Ä)$/i, async (message, bot) => {
	return message.send(`
‚ö° | –í–∞—à–∏ —Ö–∞–∫–µ—Ä—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏

SQL Injection - –ø–æ–¥–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ.
DDoS - –º–∞—Å—Å–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
Man-in-the-Middle - –ø–µ—Ä–µ—Ö–≤–∞—Ç –∫–∞–Ω–∞–ª–∞.
IP spoofing - –ø–æ–¥–º–µ–Ω–∞ IP.


üß® | –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—É—Å–æ–≤

trojan:win32/occamy.c - 150 –ú–æ–Ω–µ—Ç
rearme.sd:nimda.exe - 230 –ú–æ–Ω–µ—Ç
—Åonficker:win32/rznd.dd - 480 –ú–æ–Ω–µ—Ç


üíæ | –ü–æ–¥–∫–ª—é—á–∞–µ–º—ã–µ –º–æ–¥—É–ª–∏

arn01_cc7_ios - –ì–µ—Ä–º–∞–Ω–∏—è
eq_i_01191810 - –Ø–ø–æ–Ω–∏—è
qwr_77d_nr47z - –°–®–ê
`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "‚ö°" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üß®" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üíæ" 
	}, 
	"color": "secondary" 
	}]
] 
})}
)});

cmd.hear(/^(?:üíâ –ß—ë—Ä–Ω—ã–π –ª—ë–¥|–ß—ë—Ä–Ω—ã–π –ª—ë–¥|–ß–µ—Ä–Ω—ã–π –ª–µ–¥|Black Ice|Blackice)$/i, async (message, bot) => {
	return message.send(`
> –ß—ë—Ä–Ω—ã–π –ª—ë–¥ - —á—ë—Ä–Ω—ã–π –ø–æ—Ä–æ—à–æ–∫, –≤—ã—Å—Ç—É–ø–∞—é—â–∏–π –∫–∞—Ç–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–º –≤ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–æ–≤—ã—Ö –Ω–∏—Ç–µ–π –î–ù–ö. –°–æ–±—Ä–∞–≤ –∏—Ö, –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.

üíâ | –í–∞—à –ª—ë–¥: ${message.user.aspects}/32`)})
cmd.hear(/^(?:üìí –ê–∫–∫–∞—É–Ω—Ç|–ü—Ä–æ—Ñ–∏–ª—å)$/i, async (message, bot) => {
	return message.send(`
üëæ | ID: ${message.user.uid}
‚≠ê | –£—Ä–æ–≤–µ–Ω—å ${message.user.level} [${message.user.exp}/100]
üèÜ | –†–µ–π—Ç–∏–Ω–≥: ${message.user.rating}

üí∞ | –ú–æ–Ω–µ—Ç: ${message.user.balance}
üåï | –õ–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç: ${message.user.rub}
üíâ | –õ—ë–¥: [${message.user.aspects}/32]
`
    );
});  
cmd.hear(/^(?:üîé –°–ø—Ä–∞–≤–∫–∞|–°–ø—Ä–∞–≤–∫–∞)$/i, async (message, bot) => {
	return message.send(`
> –†–∞–∑–¥–µ–ª 1. –û–± –ö–∏–±–µ—Ä–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.
> –†–∞–∑–¥–µ–ª 2. –û–± –ö–∏–±–µ—Ä-–æ—Ä—É–∂–∏–∏.
> –†–∞–∑–¥–µ–ª 3. Dark Side.
> –†–∞–∑–¥–µ–ª 4. –ß—ë—Ä–Ω—ã–π –ª—ë–¥.
> –†–∞–∑–¥–µ–ª 5. –ñ—É—Ä–Ω–∞–ª.
> –†–∞–∑–¥–µ–ª 6. –≠–º—É–ª—è—Ç–æ—Ä.`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–†. 1" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–†. 2" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–†. 3" 
	}, 
	"color": "secondary" 
	}],
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–†. 4" 
	}, 
	"color": "secondary" 
	},
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–†. 5" 
	}, 
	"color": "secondary" 
	},
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "–†. 6" 
	}, 
	"color": "secondary" 
	}]
] 
})})})
cmd.hear(/^(?:üìï –ñ—É—Ä–Ω–∞–ª|–ñ—É—Ä–Ω–∞–ª)$/i, async (message, bot) => {
	return message.send(`

1 | [‚úö] –ó–∞–¥–∞–Ω–∏—è
2 | [‚úö] –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è

üìñ | –î–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É.
`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "‚Ññ 1" 
	}, 
	"color": "secondary" 
	}, 
	{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "‚Ññ 2" 
	}, 
	"color": "secondary" 
	}]})})})

cmd.hear(/^(?:–±–∞–ª–∞–Ω—Å|balance|money|–¥–µ–Ω—å–≥–∏)$/i, async (message, bot) => {
	return bot(`–ù–∞ —Å—á–µ—Ç–µ ${message.user.tag}: ${message.user.balance} –º–æ–Ω–µ—Ç.`
    );
});  

/*
cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞—Ç—å)$/i, async (message, bot) => {
	if(message.user.timers.hasWorked) return bot(`–í—ã —É–∂–µ —Ö–æ—Ä–æ—à–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏.\n–û—Ç–¥–æ—Ö–Ω–∏ 2 –º–∏–Ω—É—Ç—ã..üòò`);

	setTimeout(() => {
		message.user.timers.hasWorked = false;
	}, 80000);

	message.user.timers.hasWorked = true;
	message.user.exp += 1;

	const earn = utils.random(10, 25);

	message.user.balance += earn;


	return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ωüòò
\n–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${utils.sp(earn)}$`);
});
*/
cmd.hear(/^(?:–±–æ–Ω—É—Å)$/i, async (message, bot) => {


	if(message.user.timers.hasWorked) return message.send(`‚ö° | –ü–æ—Ö–æ–∂–µ –≤—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å.\n–°–ª–µ–¥—É—é—â–∏–π —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞.`);

	setTimeout(() => {
		message.user.timers.hasWorked = false;
	}, 120000);

	message.user.timers.hasWorked = true;

	const earn = utils.random(50, 200);

	message.user.balance += earn;

	return message.send(`–í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –±–æ–Ω—É—Å –∏ –ø–æ–ª—É—á–∏–ª–∏ ${utils.sp(earn)}–º–æ–Ω–µ—Ç.`);
});
/*
cmd.hear(/^(?:–º–∞–≥–∞–∑–∏–Ω|shop)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–°–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤:

1. ‚å®Ô∏è –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
 –¶–µ–Ω–∞: 500$
 –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 10-20$

2.üì± –¢–µ–ª–µ—Ñ–æ–Ω
  –¶–µ–Ω–∞: 1.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 10-30$

 3.üì∫ –¢–µ–ª–µ–≤–∏–∑–æ—Ä
  –¶–µ–Ω–∞: 3.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 30-90$

4. üìü –ë–∞–±—É—à–∫–∏–Ω –Ω–æ—É—Ç–±—É–∫
  –¶–µ–Ω–∞: 5.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 90-200$

5. üíª –ù–æ—É—Ç–±—É–∫
  –¶–µ–Ω–∞: 20.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 200-500$

6. ‚å® –ö–æ–º–ø—å—é—Ç–µ—Ä
  –¶–µ–Ω–∞: 100.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 1.000-2.000$

7. üì∫ –ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞
  –¶–µ–Ω–∞: 500.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 5.000-20.000$

üí∞ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏: –º–∞–≥–∞–∑–∏–Ω <—Ü–∏—Ñ—Ä–∞ —Ç–æ–≤–∞—Ä–∞>

‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥? –ü–∏—à–∏ ¬´—Ä–∞–±–æ—Ç–∞—Ç—å¬ª`);

const sell = pks.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.pk) return bot(`–£ –í–∞—Å —É–∂–µ –µ—Å—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ.\nüìó–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å "–ü—Ä–æ–¥–∞—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.pk = sell.id;

		return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–ù–∞–ø–∏—Å–∞—Ç—å)$/i, async (message, bot) => {
	if(!message.user.pk) return bot(`–£ —Ç–µ–±—è –Ω–µ—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è! –ö—É–ø–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ –≤ –º–∞–≥–∞–∑–∏–Ω–µ. üìå`);
	if(message.user.timers.text) return bot(`–ü–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É. –û—Ç–¥–æ—Ö–Ω–∏!`);

	setTimeout(() => {
		message.user.timers.text = false;
	}, 60000);

	message.user.timers.text = true;

 const pk = pks.find(x=> x.id === message.user.pk);
	const earn = utils.random(pk.min, pk.max);
	if(utils.random(0, 150) < 75)
	{
		message.user.balance += earn;
   message.user.dc += 1;
		bot(`–¢—ã –Ω–∞–ø–∏—Å–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É, –∏ –æ–Ω–∞ –ø–æ—Ä–∞–¥–æ–≤–∞–ª–∞ –∫–ª–∏–µ–Ω—Ç–∞! üì∞
–¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª: ${utils.sp(earn)}$`);
	}
	else
	{
		message.user.nc += 1;
		bot(`–¢—ã –Ω–∞–ø–∏—Å–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É, –∏ –æ–Ω–∞ –Ω–µ –æ—á–µ–Ω—å –ø–æ—Ä–∞–¥–æ–≤–∞–ª–∞ –∫–ª–∏–µ–Ω—Ç–∞! üí∏
`);
	}
});


cmd.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.balance) return bot(`–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!\n
üí∞ –í–∞—à –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	else if(message.args[2] <= message.user.balance)
	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`);

		if(user.uid === message.user.uid) return bot(`–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`);

		message.user.balance -= message.args[2];
		user.balance += message.args[2];

		await bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ¬ª ${utils.sp(message.args[2])}$`);

	}
});



//–ò–≥—Ä—ã

cmd.hear(/^(?:–∫–∞–∑–∏–Ω–æ)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] > message.user.balance) return bot(`–£ –í–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!`);
	else if(message.args[1] <= message.user.balance)
	{
		message.user.balance -= message.args[1];
		const multiply = utils.pick([2, 0, 0.5, 0, 2, 0.5]);

		message.user.balance += Math.floor(message.args[1] * multiply);
		return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å` : `${multiply < 1 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$`}`}
		üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	}
});
*/


cmd.hear(/^(?:–ø—Å–µ–≤–¥–æ–Ω–∏–º)\s(.*)$/i, async (message, bot) => {
	if(message.args[1].length >= 16) return message.send(`> –î–ª–∏–Ω–∞ –Ω–∏–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 16 —Å–∏–º–≤–æ–ª–æ–≤.`);

	message.user.tag = message.args[1];
	return message.send(`‚òÅ | –ü—Å–µ–≤–¥–æ–Ω–∏–º —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.`);
});

cmd.hear(/^(?:—Ä–µ–ø–æ—Ä—Ç|—Ä–µ–ø|rep|–∂–∞–ª–æ–±–∞)\s([^]+)$/i, async (message, bot) => {
	if(message.isChat) return bot(`> –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –õ–°.`);

	vk.api.messages.send({ user_id: 239323586, forward_messages: message.id, message: `üê© | Player ID: ${message.user.uid}` }).then(() => {
		return message.send(`üëåüèª | –†–µ–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.`);
	}).catch((err) => {
		return bot(`–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...`);
	});
});
/*
//–∞–¥–º–∏–Ω
cmd.hear(/^(?:–Ω–∞–∫—Ä—É—Ç–∏)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));
if(message.user.admin == false) return;
	if(message.args[2] <= 0) return;

	{
		let user = users.find(x=> x.uid == Number(message.args[1]));
		if(!user) return bot(`–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
		if(user.uid === message.user.uid) return bot(`–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
		if(user.admin == true) {
		message.user.balance += Number(message.args[1])
		await bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`);
		}
	}
});
cmd.hear(/^(?:~dev.coins)\s?([0-9]+)?\s?([0-9]+)?/i, async (message, args, bot) => {
	let user = users.find(x=> x.uid === Number(message.args[1]));
    message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	if(message.user.admin == false) return message.send(`üî∏ ¬ª –í—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
	if(!message.args[1] || !users[message.args[1]] || !message.args[2] || message.args[2] < 0) return message.send(`üí∞ ¬ª –ü—Ä–∏–º–µ—Ä: 'giverub [ID] [COUNT]'`); 
	users[message.args[1]].balance += Number(message.args[2]);
 	 
	return message.send(`üí∞ ¬ª –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É [@id${users[message.args[1]].id}(${users[message.args[1]].tag})] ${utils.sp(message.args[2])} –∫–æ–∏–Ω–æ–≤üí∞`);
});
cmd.hear(/^(?:~dev.rub)\s?([0-9]+)?\s?([0-9]+)?/i, async (message, args, bot) => {
	let user = users.find(x=> x.uid === Number(message.args[1]));
   message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
    if(message.user.admin == false) return message.send(`üî∏ ¬ª –í—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
	if(!message.args[1] || !users[message.args[1]] || !message.args[2] || message.args[2] < 0) return message.send(`üí∞ ¬ª –ü—Ä–∏–º–µ—Ä: 'giverub [ID] [COUNT]'`); 
	users[message.args[1]].rub += Number(message.args[2]);
 	 
	return message.send(`üí∞ ¬ª –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É [@id${users[message.args[1]].id}(${users[message.args[1]].tag})] ${utils.sp(message.args[2])} —Ä—É–±–ª–µ–π üí∞`);
});
cmd.hear(/^(?:~dev.get)\s?([0-9]+)?/i, async (message, args, bot) => {  
	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!message.args[1] || !Number(message.args[1]) || !users[message.args[1]]) return message.send(`üî∏ ¬ª –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ.`);
	if(message.user.admin == false) return; 
	let id = users[message.args[1]]
	if(message.user.admin == true) {
	return message.send(`
fff
`
		);
}});

cmd.hear(/^(?:~dev.newRight)\s?([0-9]+)?\s?([0-9]+)?/i, async (message, args, bot) => {
	let user = users.find(x=> x.uid === Number(message.args[1]));
    message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	if(message.user.admin == false) return message.send(`üî∏ ¬ª –í—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
	if(!message.args[1] || !users[message.args[1]] || !message.args[2] || message.args[2] < 0) return message.send(`üí∞ ¬ª –ü—Ä–∏–º–µ—Ä: 'giverub [ID] [COUNT]'`); 
	users[message.args[1]].right = Number(message.args[2]);
 	 
	return message.send(`üí∞ ¬ª –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É [@id${users[message.args[1]].id}(${users[message.args[1]].tag})] ${utils.sp(message.args[2])} –∫–æ–∏–Ω–æ–≤üí∞`);
});
cmd.hear(/^(?:~dev.removeCoins)\s?([0-9]+)?/i, async (message, args, bot) => {
    let user = users.find(x=> x.uid === Number(message.args[1]));
	if(message.user.admin == false) return message.send(`üî∏ ¬ª –£ –≤–∞—Å –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞`);
	if(!message.args[1] || !users[message.args[1]]) return message.send(`üí∞ ¬ª –ü—Ä–∏–º–µ—Ä: 'removerub [ID]'`); 
	users[message.args[1]].balance = 0; 
	return message.send(`üí∞ ¬ª –í—ã –∑–∞–±—Ä–∞–ª–∏ –≤—Å–µ –∫–æ–π–Ω—ã —É –∏–≥—Ä–æ–∫–∞ [@id${users[message.args[1]].id}(${users[message.args[1]].tag})]`);
	});
	cmd.hear(/^(?:~dev.removeRub)\s?([0-9]+)?\s([0-9]+)?/i, async (message, args, bot) => {
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(message.user.admin == false) return message.send(`üî∏ ¬ª –£ –≤–∞—Å –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞`);
		if(!message.args[1] || !users[message.args[1]]) return message.send(`üí∞ ¬ª –ü—Ä–∏–º–µ—Ä: 'removerub [ID] [COUNT]'`); 
		users[message.args[1]].rub -= Number(message.args[2]); 
		return message.send(`üí∞ ¬ª –í—ã –∑–∞–±—Ä–∞–ª–∏ ${message.args[2]} —Ä—É–±–ª–µ–π —É –∏–≥—Ä–æ–∫–∞ [@id${users[message.args[1]].id}(${users[message.args[1]].tag})]`);
	});
	*/
cmd.hear(/^(?:root.botRestart)$/i, async (message, bot) => {
	if(message.senderId !== 239323586) return;
	await bot(`Bot reboot.`);
	await saveUsers();
	process.exit(-1);
});

cmd.hear(/^(?:—Ä–∞—Å—Å—ã–ª–∫–∞)\s([^]+)$/i, async (message, bot) => {
message.user.foolder += 1;
	if(message.user.admin == false) return;
 			 users.filter(x=> x.id !== 1).map(zz => { 
  vk.api.messages.send({ user_id: zz.id, message: `${message.args[1]}`}); 
 }); 
 			let people = 0;
        for(let id in users) {
            vk.api.call('messages.send', {
             chat_id: id,
              message: `${message.args[1]}` });
        }
        return message.send(`üì£ –†–∞—Å—Å—ã–ª–æ—á–∫–∞\n\n"${message.args[1]}"`);
 
})

cmd.hear(/^(?:–ø–æ—Å—Ç—Ä–∞—Å—Å—ã–ª–∫–∞)\s([^]+)$/i, async (message, bot) => {
message.user.foolder += 1;
	if(message.user.admin == false) return;
 			 users.filter(x=> x.id !== 1).map(zz => { 
  vk.api.messages.send({ user_id: zz.id, message: `—Ç–µ—Å—Ç:`, attachment: `${message.args[1]}`}); 
 }); 
 			let people = 0;
        for(let id in users) {
            vk.api.call('messages.send', {
             chat_id: id,
              message: `üì£ –†–∞—Å—Å—ã–ª–æ—á–∫–∞:`,
              attachment: `${message.args[1]}` });
        }
        return message.send(`–£—Å–ø–µ—à–Ω–æ.`);
 
})

cmd.hear(/^(?:–æ—Ç–≤–µ—Ç)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
		if(message.user.admin == false) return;
	const user = await users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return;
	vk.api.messages.send({ user_id: user.id, message: `ü¶ä | ${user.tag}, –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∏–ª–∞ –Ω–∞ –í–∞—à –≤–æ–ø—Ä–æ—Å\n\nü¶ä | –û—Ç–≤–µ—Ç: ${message.args[2]}`});
	message.send(`${user.tag}, —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ. `)
});
setInterval(async () => {
fs.writeFileSync("./lobby.json", JSON.stringify(lobby, null, "\t"));
     for(i in lobby){
     if(lobby[i].time < getUnix()){
        if(lobby[i].players > 0){
  vk.api.call("messages.send", {
    user_id: users[lobby[i].plid[0].uid].id,
     message: `üåß | –ü—Ä–æ—à–ª–æ 5 –º–∏–Ω—É—Ç. –ö–æ–º–Ω–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –í—ã –Ω–∞—Ö–æ–¥–∏–ª–∏—Å—å –æ—Ç–∫–ª—é—á–µ–Ω–∞.`,
     random_id: 0
	}).then((res) => {}).catch((error) => {console.log('–û—à–∏–±–∫–∞'); });    
      users[lobby[i].plid[0].uid].lobby = -1;
      users[lobby[i].plid[0].uid].lobbym = 2;
if(lobby[i].players > 1){
vk.api.call("messages.send", {
    user_id: users[lobby[i].plid[1].uid].id,
     message: `üåß | –ü—Ä–æ—à–ª–æ 5 –º–∏–Ω—É—Ç. –ö–æ–º–Ω–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –í—ã –Ω–∞—Ö–æ–¥–∏–ª–∏—Å—å –æ—Ç–∫–ª—é—á–µ–Ω–∞.`,
     random_id: 0
	}).then((res) => {}).catch((error) => {console.log('–û—à–∏–±–∫–∞'); });    
      users[lobby[i].plid[1].uid].lobby = -1;
      users[lobby[i].plid[1].uid].lobbym = 2;
               }
            lobby[i].players = 0;
            lobby[i].plid = [];
           }
         }
      }
}, 15000);
cmd.hear(/^(?:–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è|–ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—å—Å—è)\s?([0-9]+)?$/i, async (message, bot) => {
	if(message.user.lobby != -1) return message.send(`üî• | –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ–º–Ω–∞—Ç–µ.`);
	if(!message.args[1]) return message.send(`üçí | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã.`);
	let lob = lobby.find(x=> x.uid == message.args[1]);
	if(!lob) return bot(`üçí | –ö–æ–º–Ω–∞—Ç–∞ ‚Ññ${message.args[1]} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);
	if(lob.players <= 0) return bot(`üçí | –ö–æ–º–Ω–∞—Ç–∞ ‚Ññ${message.args[1]} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);
	if(lob.players > 1) return bot(`üçí | –ö–æ–º–Ω–∞—Ç–∞ ‚Ññ${message.args[1]} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);
			lobby[message.args[1]].plid.push({
				uid: message.user.uid,
				   hod: 2,
				   str: message.user.str,
				   vit: message.user.vit
			});
			  lobby[message.args[1]].players += 1;
			  message.user.lobby = message.args[1];
			  message.user.lobbym = 1;
			  lobby[message.args[1]].time += 300000;
	  message.send(`ü•ë | –í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–Ω–∞—Ç–µ ‚Ññ${message.user.lobby}.\nü•ë | –î–ª—è –∞—Ç–∞–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É ‚â™–ê—Ç–∞–∫–∞‚â´.\nü•ë | –ù–∞ –±–æ–π –≤—ã–¥–∞—ë—Ç—Å—è 5 –º–∏–Ω—É—Ç –∏ 2 —Ö–æ–¥–∞.`);
	});
	cmd.hear(/^(?:–∫–æ–º–Ω–∞—Ç—ã)$/i, async (message, bot) => {
	let text = `ü•ë | –î–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É ‚â™–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è [–Ω–æ–º–µ—Ä]‚â´ \n–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç –¥–ª—è –≤–∞—Å:\n`;
	let h = 0;
	for(i in lobby){
	if(lobby[i].players == 1){
	h++;
	text += `${utils.gi(h)} ‚Ä¢ –ö–æ–º–Ω–∞—Ç–∞ ‚Ññ${lobby[i].uid}\n`;
	}
	}
	if(text == `ü•ë | –î–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É ‚â™–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è [–Ω–æ–º–µ—Ä]‚â´ \n–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç –¥–ª—è –≤–∞—Å:\n`) return message.send(`üéó | –î–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –≤–∞—Å –∫–æ–º–Ω–∞—Ç –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.`);
	return bot(text);
	});
	cmd.hear(/^(?:–∞—Ç–∞–∫–∞)$/i, async (message, bot) => {
	if(message.user.lobby == -1) return message.send(`üéó | –í—ã –Ω–µ –≤ –∫–æ–º–Ω–∞—Ç–µ.`);
	if(lobby[message.user.lobby].players < 2) return message.send(`üéó | –í –∫–æ–º–Ω–∞—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª—é–¥–µ–π`);
	if(lobby[message.user.lobby].plid[message.user.lobbym].hod < 1) return message.send(`üéó | –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ–¥–æ–≤.`);
	let udar = message.user.str + utils.random(0,30);
	let r = message.user.lobby;
	if(message.user.lobbym == 1){
	
	lobby[r].plid[0].vit -= udar;
	lobby[r].plid[1].hod -= 1;
	if(lobby[r].plid[0].vit <= 0){
	lobby[r].players = 0;
	vk.api.call("messages.send", {
		user_id: users[lobby[r].plid[0].uid].id,
		 message: `üéó | –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –±–æ–π –≤ –∫–æ–º–Ω–∞—Ç–µ ‚Ññ${message.user.lobby}`,
		 random_id: 0
		}).then((res) => {}).catch((error) => {console.log('–û—à–∏–±–∫–∞'); });
	users[lobby[message.user.lobby].plid[0].uid].lobby = -1;
	users[lobby[message.user.lobby].plid[0].uid].lobbym = 2;
	return message.send(`üéó | –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –∏–≥—Ä–æ–∫–∞: ${users[lobby[message.user.lobby].plid[0].uid].tag}`);
	}else{
	return message.send(`üéó | –í—ã —É–¥–∞—Ä–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ –Ω–∞ ${udar} –µ–¥. —É—Ä–æ–Ω–∞.`);
	}
	}
	if(message.user.lobbym == 0){
	lobby[message.user.lobby].plid[1].vit -= udar;
	lobby[message.user.lobby].plid[0].hod -= 1;
	if(lobby[message.user.lobby].plid[1].vit <= 0){
	lobby[message.user.lobby].players = 0;
	vk.api.call("messages.send", {
		user_id: users[lobby[message.user.lobby].plid[1].uid].id,
		 message: `üéó | –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –±–æ–π –≤ –∫–æ–º–Ω–∞—Ç–µ ‚Ññ${message.user.lobby} `,
		 random_id: 0
		}).then((res) => {}).catch((error) => {console.log('–û—à–∏–±–∫–∞'); });
	users[lobby[message.user.lobby].plid[1].uid].lobby = -1;
	users[lobby[message.user.lobby].plid[1].uid].lobbym = 2;
	message.user.lobby = -1;
	message.user.lobbym = 1;
	return message.send(`üéó | –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –∏–≥—Ä–æ–∫–∞: ${users[lobby[message.user.lobby].plid[1].uid].tag}
`);
	}else{
	return message.send(`üéó | –í—ã —É–¥–∞—Ä–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ –Ω–∞ ${udar} –µ–¥. —É—Ä–æ–Ω–∞.`);
	}
	}
	if(lobby[r].plid[1].hod < 1 && lobby[r].plid[0].hod < 1){
	lobby[r].players = 0;
	users[lobby[r].plid[1].uid].lobby = -1;
	users[lobby[r].plid[1].uid].lobbym = 2;
	users[lobby[r].plid[0].uid].lobby = -1;
	users[lobby[r].plid[0].uid].lobbym = 2;
	return message.send(`üéó | –ë–æ–π –æ–∫–æ–Ω—á–∏–ª—Å—è –Ω–∏—á—å–µ–π.`);
	}
	});
	cmd.hear(/^(?:—Ä–µ–∑—É–ª—å—Ç–∞—Ç)$/i, async (message, bot) => {
		let r = message.user.lobby
		if(message.user.lobby == -1) return message.send(`üéó | –í—ã –Ω–µ –≤ –∫–æ–º–Ω–∞—Ç–µ.`);
		if(lobby[message.user.lobby].players < 2) return message.send(`üéó | –í –∫–æ–º–Ω–∞—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª—é–¥–µ–π`);
		if(lobby[message.user.lobby].plid[message.user.lobbym].hod < 1) {
			let hp1 = lobby[r].plid[1].vit;
			let hp0 = lobby[r].plid[0].vit;
			if(lobby[r].plid[1].hod < 1 && lobby[r].plid[0].hod < 1){
			lobby[r].players = 0;
			if(hp1> hp0){
			// –í —ç—Ç–æ–º –º–µ—Å—Ç–µ –º–æ–∂–µ—à—å —à–æ-—Ç–æ –Ω–∞—á–∏—Å–ª—è—Ç—å
			users[lobby[r].plid[1].uid].balance += Number(650)
			users[lobby[r].plid[1].uid].rating += Number(10)
			message.send(`–ü–æ–±–µ–¥–∏–ª: ${users[lobby[r].plid[1].uid].tag}!
‚≠ê | –ù–∞–≥—Ä–∞–¥–∞: 10 üèÜ | 650 –ú–æ–Ω–µ—Ç`);
			}else{
			// –í —ç—Ç–æ–º –º–µ—Å—Ç–µ –º–æ–∂–µ—à—å —à–æ-—Ç–æ –Ω–∞—á–∏—Å–ª—è—Ç—å
			users[lobby[r].plid[0].uid].balance += Number(650)
			users[lobby[r].plid[0].uid].rating += Number(10)
			message.send(`–ü–æ–±–µ–¥–∏–ª: ${users[lobby[r].plid[0].uid].tag}!
‚≠ê | –ù–∞–≥—Ä–∞–¥–∞: 10 üèÜ | 650 –ú–æ–Ω–µ—Ç `);
			}
			users[lobby[r].plid[1].uid].lobby = -1;
			users[lobby[r].plid[1].uid].lobbym = 2;
			users[lobby[r].plid[0].uid].lobby = -1;
			users[lobby[r].plid[0].uid].lobbym = 2;
			}}});

	cmd.hear(/^(?:–∫–æ–º–Ω–∞—Ç–∞)$/i, async (message, bot) => {
	if(message.user.lobby != -1) return message.send(`‚è≥ | –í—ã —É–∂–µ –≤ –∫–æ–º–Ω–∞—Ç–µ.`);
	let lobid = -1;
	for(i in lobby){
	 if(lobby[i].players > 0 && lobby[i].players < 2){
		if((lobby[i].plid[0].str + lobby[i].plid[0].vit + utils.random(0,100)) > (message.user.str + message.user.vit + utils.random(0,100)) || (lobby[i].plid[0].str + lobby[i].plid[0].vit + utils.random(0,100)) < (message.user.str + message.user.vit + utils.random(0,100))){
	lobid = lobby[i].uid;
	}
	}
	}
	if(lobid = -1){
	let bl = lobby.length;
	let sh = getUnix() + 300000;
			lobby.push({
				uid: lobby.length,
				players: 1,
				   plid: [],
				   time: sh
			});
			lobby[bl].plid.push({
				uid: message.user.uid,
				   hod: 2,
				   str: message.user.str,
				   vit: message.user.vit
			});
			 message.user.lobby = bl;
			 message.user.lobbym = 0;
	 message.send(`‚è≥ | –í—ã —Å–æ–∑–¥–∞–ª–∏ –∫–æ–º–Ω–∞—Ç—É ‚Ññ${bl}.\n–ñ–¥–∏—Ç–µ, –∫–æ–≥–¥–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –µ—â—ë 1 —á–µ–ª–æ–≤–µ–∫. \n–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Å–µ–≥–æ 5 –º–∏–Ω—É—Ç, –∑–∞—Ç–µ–º –∫–æ–º–Ω–∞—Ç–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–π.`);
	}else{
			lobby[lobid].plid.push({
				uid: message.user.uid,
				   hod: 2,
				   str: message.user.str,
				   vit: message.user.vit
			});
			  lobby[lobid].players += 1;
			  message.user.lobby = lobid;
			  message.user.lobbym = 1;
			  message.send(`‚è≥ | –í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–Ω–∞—Ç–µ ‚Ññ${lobid}. –î–ª—è –∞—Ç–∞–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <<–ê—Ç–∞–∫–∞>>.`);
	}
	});
	cmd.hear(/^(?:–ë—ã—Å—Ç—Ä—ã–π –±–æ–π)$/i, async (message, bot) => {
	let nap = [];
	let user = 0;
	let one = message.user.str + message.user.vit;
	let two = 0;
	let useri = 0;
	let y = false;
	let bla = users.length - 1;
	// –í—ã–±–∏—Ä–∞–µ–º 10 —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö —á–µ–ª–∏–∫–æ–≤ –∏–∑ –±–∞–∑—ã
			for(i=0;i<10;i++){ 
		 user = utils.random(0,bla);
					nap.push({id: users[user].uid, idvk: users[user].id, na: users[user].tag, sila: users[user].str, hp: users[user].vit}); 
		}
	
	// –°–æ—Ä—Ç–∏—Ä—É–µ–º —ç—Ç–∏—Ö 10 —á–µ–ª–∏–∫–æ–≤
	for(i in nap){
	  if(nap[i].sila > 0 && nap[i].hp > 0){
		if(nap[i].idvk != message.senderId){
			if((nap[i].sila + utils.random(0,100)) < (message.user.str + utils.random(0,100)) || (nap[i].sila + utils.random(0,100)) > (message.user.str + utils.random(0,100))){
		 user = nap[i].id;
		 useri = i;
		 y = true;
	}
	}
	}
	}
	if(y != false){
	if(users[user].str + users[user].vit + utils.random(0,150) > message.user.str + message.user.vit + utils.random(0,150)){
	return message.send(`üíä | –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –±–æ–π. –í–∞—Å –ø–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫ #${users[user].uid}`);
	}else{
	return message.send(`üíä | –í—ã –≤—ã–π–≥—Ä–∞–ª–∏ –±–æ–π. –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ #${users[user].uid}`);
	}
	}else{
	return message.send(`üíä | –ö —Å–æ–∂–µ–ª–µ–Ω–∏—é, –Ω–∞–π–¥–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤—Ä–∞–≥–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å.`);
	}
	});
	function getUnix() {
		return Date.now();
	}
	cmd.hear(/^(?:-dev)\s?([0-9]+)\s(.*)\s(.*)?$/i, async (message, bot) => {
		if(message.user.admin < 1) return bot(`–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞`);
		//// –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
		if(!message.args[1]) return bot(`–í–≤–µ–¥–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞`);
		////
		let user = users.find(x=> x.uid == message.args[1]);
		if(!user) return bot(`–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
		//–ù–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç.–∫ –µ—Å–ª–∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –º–µ–∂–¥—É –Ω–∏–º–∏ "?", —Ç–æ —Å—á–∏—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞
		if(!message.args[2]) return bot(`–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π`);
		 if(!message.args[3]) return bot(`–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π`);
		//////
		let per = message.args[2];
		let zn = Number(message.args[3]);
		user[per] = Number(zn);
		return bot(`–ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "${per}" –∏–≥—Ä–æ–∫–∞ "${user.tag}" –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "${zn}" `);
		});

//–•
cmd.hear(/^(?:–Æ–∂–Ω—ã–π –º–æ—Å—Ç|‚è≥ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å)$/i, async (message, bot) => {
	let mobs = utils.pick([`–ï—Ä–µ—Ç–∏–∫–∞`, `–ö–∏–±–µ—Ä–∑–æ–º–±–∏`, `–†–∞–±–æ–º–µ—Ö–∞–Ω–∏–∫–∞`, `–î–µ–º–æ—Ä–≥–∞`, `–ê–ª—å–≤–∏–æ–Ω–∞`, `–ö–∞—Ä–æ–Ω—Å–∞`, `–§–æ—Ä–Ω–∞`, `–≠–≤–∏–ª–æ–Ω–∞`])
	let heal = utils.pick([`170`, `215`, `310`, `120`, `380`])
	let uron = utils.pick([`8`, `12`, `22`, `28`, `30`])
	let earn = 0
	message.user.active = 2
		if(message.user.se == 0 && message.user.um == 0 && message.user.sm == 0 && message.user.active == 2) {
			saveUsers()
setTimeout(() => {message.send(`
‚öô | –í—ã, –≤–∑—è–≤ –∫–∞—Ä—Ç—É, –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –Ω–∞ —Ä—è–¥–æ–º —Å—Ç–æ—è—â–∏–π —â–∏—Ç: <<–í–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å 20 –º–æ–Ω—Å—Ç—Ä–æ–≤ –∑–∞ —Ä–∞–∑, —á—Ç–æ-–±—ã –ø—Ä–æ–π—Ç–∏ —ç—Ç—É –ª–æ–∫–∞—Ü–∏—é.>>\n–í–∑—è–≤ –∫–∏—Ä–º–∞—Ç–æ–≤—ã–π –º–µ—á, –≤—ã –¥–≤–∏–Ω—É–ª–∏—Å—å –≤ –ø—É—Ç—å...`); }, 1);
		}
		if(message.user.um >= 0 && message.user.active == 2) {
			message.user.um += Number(1) 
			message.user.hp_mon = heal
			message.user.sil_mon = uron
			message.user.unite = mobs
setTimeout(() => {message.send(`
> –ë—Ä–æ–¥—è –ø–æ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—è–º —é–∂–Ω–æ–≥–æ –º–æ—Å—Ç–∞, –≤—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ <<${mobs}>>

üåë | –ó–¥–æ—Ä–æ–≤—å–µ: ${heal} | –°–∏–ª–∞: ${uron}

üåï | –í—ã
–ó–¥–æ—Ä–æ–≤—å–µ: ${message.user.vit} | –°–∏–ª–∞: ${message.user.str}

–ê—Ç–∞–∫–∞ ‚Äî üî• | –í—ã–π—Ç–∏ ‚Äî üè≥`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üî•" 
	}, 
	"color": "positive" 
	}],
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üè≥" 
	}, 
	"color": "negative" 
		}]]})} 
	); }, 10000); 
}});
cmd.hear(/^(?:–°–µ—Ç–µ–≤–æ–π —ç–∫—Ä–∞–Ω|‚è≥ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å)$/i, async (message, bot) => {
	let mobs = utils.pick([, `–î–µ–º–æ—Ä–≥–∞`, `–ê–ª—å–≤–∏–æ–Ω–∞`, `–ö–∞—Ä–æ–Ω—Å–∞`, `–§–æ—Ä–Ω–∞`, `–≠–≤–∏–ª–æ–Ω–∞`, `–ü–∞—Ä–Ω–µ—Ä–∞`, `–ö–æ—É–ª–∏`, `–≠–Ω–Ω–æ—Ä–¥–∞`, `–í–∏–≤–µ—Ä–Ω—É`, `–ó–º–µ–µ–ª–æ–≤–∞`])
	message.user.active = 3
	let heal = utils.pick([`290`, `340`, `390`, `430`, `480`])
	let uron = utils.pick([`16`, `22`, `28`, `36`, `40`])
	let earn = 0

		if(message.user.se == 0 && message.user.um == 0 && message.user.sm == 0 && message.user.active == 3) {
			saveUsers()
setTimeout(() => {message.send(`
‚öô | –í—ã, –≤–∑—è–≤ –∫–∞—Ä—Ç—É, –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –Ω–∞ —Ä—è–¥–æ–º —Å—Ç–æ—è—â–∏–π —â–∏—Ç: <<–í–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å 20 –º–æ–Ω—Å—Ç—Ä–æ–≤ –∑–∞ —Ä–∞–∑, —á—Ç–æ-–±—ã –ø—Ä–æ–π—Ç–∏ —ç—Ç—É –ª–æ–∫–∞—Ü–∏—é.>>\n–í–∑—è–≤ –∞–ª—å–º–∞—Ä–∏—Ç–æ–≤—ã–π –º–µ—á, –≤—ã –¥–≤–∏–Ω—É–ª–∏—Å—å –≤ –ø—É—Ç—å...`); }, 1);
		}
		if(message.user.se >= 0 && message.user.active == 3) {
			message.user.se += Number(1) 
			message.user.hp_mon = heal
			message.user.sil_mon = uron
			message.user.unite = mobs
setTimeout(() => {message.send(`
> –ë—Ä–æ–¥—è –ø–æ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—è–º —Å–µ—Ç–µ–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞, –≤—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ <<${mobs}>>

üåë | –ó–¥–æ—Ä–æ–≤—å–µ: ${heal} | –°–∏–ª–∞: ${uron}

üåï | –í—ã
–ó–¥–æ—Ä–æ–≤—å–µ: ${message.user.vit} | –°–∏–ª–∞: ${message.user.str}

–ê—Ç–∞–∫–∞ ‚Äî üî• | –í—ã–π—Ç–∏ ‚Äî üè≥`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üî•" 
	}, 
	"color": "positive" 
	}],
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üè≥" 
	}, 
	"color": "negative" 
		}]]})} 
	); }, 10000); 
}});
cmd.hear(/^(?:–°–µ–≤–µ—Ä–Ω—ã–π –º–æ—Å—Ç|‚è≥ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å)$/i, async (message, bot) => {
	let mobs = utils.pick([`–ö—Ä–∞–∫–µ–Ω–∞`, `–†–µ–π–∑–æ—Ä–∞`, `–ï—Ä–µ—Ç–∏–∫–∞`, `–ö–∏–±–µ—Ä–∑–æ–º–±–∏`, `–†–∞–±–æ–º–µ—Ö–∞–Ω–∏–∫–∞`, `–î–µ–º–æ—Ä–≥–∞`])
	message.user.active = 1
	let heal = utils.pick([`100`, `145`, `70`, `50`, `90`])
	let uron = utils.pick([`2`, `8`, `15`, `20`, `10`])
	let earn = 0

		if(message.user.se == 0 && message.user.um == 0 && message.user.sm == 0 && message.user.active == 1) {
			saveUsers()
setTimeout(() => {message.send(`
‚öô | –í—ã, –≤–∑—è–≤ –∫–∞—Ä—Ç—É, –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –Ω–∞ —Ä—è–¥–æ–º —Å—Ç–æ—è—â–∏–π —â–∏—Ç: <<–í–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å 20 –º–æ–Ω—Å—Ç—Ä–æ–≤ –∑–∞ —Ä–∞–∑, —á—Ç–æ-–±—ã –ø—Ä–æ–π—Ç–∏ —ç—Ç—É –ª–æ–∫–∞—Ü–∏—é.>>\n–í–∑—è–≤ –ø–ª–∞–∑–º–µ–Ω–Ω—ã–π –º–µ—á, –≤—ã –¥–≤–∏–Ω—É–ª–∏—Å—å –≤ –ø—É—Ç—å...`); }, 1);
		}
		if(message.user.sm >= 0 && message.user.active == 2) {
			message.user.sm += Number(1) 
			message.user.hp_mon = heal
			message.user.sil_mon = uron
			message.user.unite = mobs
setTimeout(() => {message.send(`
> –ë—Ä–æ–¥—è –ø–æ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—è–º —Å–µ–≤–µ—Ä–Ω–æ–≥–æ –º–æ—Å—Ç–∞, –≤—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ <<${mobs}>>

üåë | –ó–¥–æ—Ä–æ–≤—å–µ: ${heal} | –°–∏–ª–∞: ${uron}

üåï | –í—ã
–ó–¥–æ—Ä–æ–≤—å–µ: ${message.user.vit} | –°–∏–ª–∞: ${message.user.str}

–ê—Ç–∞–∫–∞ ‚Äî üî• | –í—ã–π—Ç–∏ ‚Äî üè≥`, { 
	keyboard:JSON.stringify( 
	{ 
	"inline": true,
	"buttons": [ 
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üî•" 
	}, 
	"color": "positive" 
	}],
	[{ 
	"action": { 
	"type": "text", 
	"payload": "{}", 
	"label": "üè≥" 
	}, 
	"color": "negative" 
		}]]})} 
	); }, 10000); 
}});
cmd.hear(/^(?:üî•)$/i, async (message, bot) => {
	let earn = 25
		if(message.user.hp_mon > 1 && message.user.sm >= 1 && message.user.sm <= 20 && message.user.active == 1) {
			message.user.vit -= Number(message.user.sil_mon)
			
			message.user.hp_mon -= Number(message.user.str)
			return message.send(`
üíæ | –í—ã —É–¥–∞—Ä–∏–ª–∏ ${message.user.unite}.\n\nüí£ | –£—Ä–æ–Ω: ${message.user.str} | –ó–¥–æ—Ä–æ–≤—å–µ: ${message.user.vit}\n‚ù§ –ó–¥–æ—Ä–æ–≤—å–µ –º–æ–Ω—Å—Ç—Ä–∞: ${message.user.hp_mon}`, { 
				keyboard:JSON.stringify( 
				{ 
				"inline": true,
				"buttons": [ 
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "üî•" 
				}, 
				"color": "positive" 
				}],
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "üè≥" 
				}, 
				"color": "negative"
			}]]})}
		)}
		if(message.user.sm >= 20) {
			message.user.balance += Number(earn)
			message.user.hp_mon = 0;
			message.user.sil_mon = 0;
			message.user.exp += Number(10);
			message.user.aspects += Number(5);
			message.user.unite = ``;
			message.user.active = 0;
			message.user.quest_1 = true;
			message.user.sm = 0;
			return message.send(`
–ö—Ä–∏—Å—Ç–æ—Ñ > –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º –ª–æ–∫–∞—Ü–∏–∏. –Ø –æ—Å—Ç–∞–≤–∏–ª —Ç–µ–±–µ –≤ –∂—É—Ä–Ω–∞–ª–µ –∫–≤–µ—Å—Ç, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å - –ø—Ä–æ–π–¥–µ—à—å.
üîπ | –ù–∞–≥—Ä–∞–¥–∞: 5 –ª—å–¥–∞ | 10 EXP | 500 –º–æ–Ω–µ—Ç.`)
		}
		if(message.user.hp_mon <= 0) {
			message.user.balance += Number(earn)
			message.user.hp_mon = 0;
			message.user.sil_mon = 0;
			message.user.unite = ``;
			return message.send(`üî™ | –í—ã —É–±–∏–ª–∏ –º–æ–Ω—Å—Ç—Ä–∞!\nüíö | –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: ${message.user.vit}.`, { 
				keyboard:JSON.stringify( 
				{ 
				"inline": true,
				"buttons": [ 
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "‚è≥ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" 
				}, 
				"color": "positive" 
				}],
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "üè≥" 
				}, 
				"color": "negative"
			}]]})})
		}
		if(message.user.vit <= 0) {
			message.user.balance += Number(earn)
			message.user.sm = 0
			message.user.active = 0;
			message.user.hp_mon = 0;
			message.user.sil_mon = 0;
			message.user.unite = ``;
		}
		if(message.user.hp_mon > 1 && message.user.um >= 1 && message.user.um <= 20 && message.user.active == 2) {
			message.user.vit -= Number(message.user.sil_mon)
			
			message.user.hp_mon -= Number(message.user.str)
			return message.send(`
üíæ | –í—ã —É–¥–∞—Ä–∏–ª–∏ ${message.user.unite}.\n\nüí£ | –£—Ä–æ–Ω: ${message.user.str} | –ó–¥–æ—Ä–æ–≤—å–µ: ${message.user.vit}\n‚ù§ –ó–¥–æ—Ä–æ–≤—å–µ –º–æ–Ω—Å—Ç—Ä–∞: ${message.user.hp_mon}`, { 
				keyboard:JSON.stringify( 
				{ 
				"inline": true,
				"buttons": [ 
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "üî•" 
				}, 
				"color": "positive" 
				}],
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "üè≥" 
				}, 
				"color": "negative"
			}]]})}
		)}
		if(message.user.um >= 20) {
			message.user.balance += Number(earn)
			message.user.balance += Number(1500)
			message.user.hp_mon = 0;
			message.user.active = 0
			message.user.sil_mon = 0;
			message.user.exp += Number(30);
			message.user.aspects += Number(15);
			message.user.unite = ``;
			message.user.quest_2 = true;
			message.user.um = 0;
			return message.send(`
–¢–µ–π–ª–æ—Ä > –ê —Ç—ã –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–π –ø–∞—Ä–µ–Ω—å! –ì–ª—è–¥–∏—à—å –∏ –±–æ—Å—Å–∞ —É–Ω–∏—á—Ç–æ–∂–µ—à—å! –í —Ç–≤–æ–µ–º –∂—É—Ä–Ω–∞–ª–µ –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç.
üîπ | –ù–∞–≥—Ä–∞–¥–∞: 15 –ª—å–¥–∞ | 30 EXP | 1500 –º–æ–Ω–µ—Ç.`)
		}
		if(message.user.hp_mon <= 0) {
			message.user.balance += Number(earn)
			message.user.hp_mon = 0;
			message.user.sil_mon = 0;
			message.user.unite = ``;
			return message.send(`üî™ | –í—ã —É–±–∏–ª–∏ –º–æ–Ω—Å—Ç—Ä–∞!\nüíö | –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: ${message.user.vit}.`, { 
				keyboard:JSON.stringify( 
				{ 
				"inline": true,
				"buttons": [ 
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "‚è≥ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" 
				}, 
				"color": "positive" 
				}],
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "üè≥" 
				}, 
				"color": "negative"
			}]]})})
		}
		if(message.user.vit <= 0) {
			message.user.balance += Number(earn)
			message.user.se = 0
			message.user.hp_mon = 0;
			message.user.active = 0
			message.user.sil_mon = 0;
			message.user.unite = ``;
			return message.send(`–¢—ã –±—ã–ª –±–ª–∏–∑–æ–∫ –∫ —É—Å–ø–µ—Ö—É, –Ω–æ –∑–¥–æ—Ä–æ–≤—å–µ —Ç–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –æ–ø—É—Å—Ç–∏–ª–æ—Å—å –¥–æ –Ω—É–ª—è.`)
		}
		if(message.user.hp_mon > 1 && message.user.se >= 1 && message.user.se <= 20 && message.user.active == 3) {
			message.user.vit -= Number(message.user.sil_mon)
			
			message.user.hp_mon -= Number(message.user.str)
			return message.send(`
üíæ | –í—ã —É–¥–∞—Ä–∏–ª–∏ ${message.user.unite}.\n\nüí£ | –£—Ä–æ–Ω: ${message.user.str} | –ó–¥–æ—Ä–æ–≤—å–µ: ${message.user.vit}\n‚ù§ –ó–¥–æ—Ä–æ–≤—å–µ –º–æ–Ω—Å—Ç—Ä–∞: ${message.user.hp_mon}`, { 
				keyboard:JSON.stringify( 
				{ 
				"inline": true,
				"buttons": [ 
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "üî•" 
				}, 
				"color": "positive" 
				}],
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "üè≥" 
				}, 
				"color": "negative"
			}]]})}
		)}
		if(message.user.se >= 20) {
			message.user.balance += Number(earn)
			message.user.balance += Number(3000)
			message.user.hp_mon = 0;
			message.user.active = 0
			message.user.sil_mon = 0;
			message.user.exp += Number(70);
			message.user.aspects += Number(40);
			message.user.unite = ``;
			message.user.quest_3 = true;
			message.user.se = 0;
			return message.send(`
–†–æ–Ω–∏ > –ù–µ –ª—é–±–ª—é —è —ç—Ç–∏ –ø–æ—Ö–≤–∞–ª—ã, –∫–æ—Ä–æ—á–µ, –≤ —Ç–≤–æ–µ–º –∂—É—Ä–Ω–∞–ª–µ –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –∫–≤–µ—Å—Ç.
üîπ | –ù–∞–≥—Ä–∞–¥–∞: 40 –ª—å–¥–∞ | 70 EXP | 3000 –º–æ–Ω–µ—Ç.`)
		}
		if(message.user.hp_mon <= 0) {
			message.user.balance += Number(earn)
			message.user.hp_mon = 0;
			message.user.sil_mon = 0;
			message.user.unite = ``;
			return message.send(`üî™ | –í—ã —É–±–∏–ª–∏ –º–æ–Ω—Å—Ç—Ä–∞!\nüíö | –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: ${message.user.vit}.`, { 
				keyboard:JSON.stringify( 
				{ 
				"inline": true,
				"buttons": [ 
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "‚è≥ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" 
				}, 
				"color": "positive" 
				}],
				[{ 
				"action": { 
				"type": "text", 
				"payload": "{}", 
				"label": "üè≥" 
				}, 
				"color": "negative"
			}]]})})
		}
		if(message.user.vit <= 0) {
			message.user.balance += Number(earn)
			message.user.se = 0
			message.user.hp_mon = 0;
			message.user.active = 0;
			message.user.sil_mon = 0;
			message.user.unite = ``;
			return message.send(`–¢—ã –±—ã–ª –±–ª–∏–∑–æ–∫ –∫ —É—Å–ø–µ—Ö—É, –Ω–æ –∑–¥–æ—Ä–æ–≤—å–µ —Ç–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –æ–ø—É—Å—Ç–∏–ª–æ—Å—å –¥–æ –Ω—É–ª—è.`)
		}
});